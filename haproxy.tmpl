global
    maxconn 20000
    pidfile /var/run/haproxy.pid
    user root
    group root
    stats socket /var/run/haproxy.stat level admin

defaults
    mode http

    http-check disable-on-404
    option httpchk /index.html

    # Setting options
    option redispatch
    option tcp-smart-accept
    option tcp-smart-connect
    option forwardfor
    option http-server-close

    # Setting timeouts
    timeout connect           5s
    timeout client           20s
    timeout server           15s
    timeout http-keep-alive   1s
    timeout check             2s

    # Slowloris protection
    timeout http-request     10s     # Slowloris protection
    timeout tarpit            1m     # tarpit hold time
    timeout queue             1m
    backlog                10000

{{ $backend1 := "SERVICE_NAME" }}
{{ $domain1 := "PUBLIC_DOMAIN" }}
frontend www_http
    bind *:80
    reqadd X-Forwarded-Proto:\ http
    option forwardfor
    option http-server-close
    acl host_{{ $backend1 }} hdr(host) -i {{ $domain1 }}
    use_backend cluster_{{ $backend1 }} if host_{{ $backend1 }}
    default_backend cluster_{{ $backend1 }}
    capture cookie  SERVERID                     len 32
    capture request header Referer               len 64
    capture request header User-Agent            len 128
    capture request header Host                  len 64
    capture request header X-Forwarded-For       len 64
    capture request header Accept-Encoding       len 64

{{ $ips := printf "/backends/%s/ips" $backend1 }}
backend cluster_{{ $backend1 }}
    {{ if gt ( len ( ls $ips ) ) 1 }}
    balance roundrobin
    cookie SERVERID insert indirect
    {{ range $id, $ip := ls $ips }}
    {{ $ip := base $ip }}
    server {{ $backend1 }}-{{ $id  }} {{ $ip }}:80 cookie {{ base $backend1 }}-{{ $id }} check
    {{ end }}
    {{ else }}
    {{ range $id, $ip := ls $ips }}
    {{ $ip := base $ip }}
    server {{ $backend1 }}-{{ $id  }} {{ $ip }}:80
    {{ end }}
    {{ end }}
